#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass scrreprt
\begin_preamble
\usepackage{graphics}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language german-ch
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
SBB Fahrplan als Web Service
\end_layout

\begin_layout Author
Florian Amstutz <
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

florian@amstutz.nu
\end_layout

\end_inset

>
\end_layout

\begin_layout Publishers
Zürcher Hochschule für Angewandte Wissenschaften, Seminar Webprojekte mit
 ASP.NET
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Chapter
Einleitung
\end_layout

\begin_layout Standard
Das Seminar Webprojekte mit ASP.NET wird im Rahmen des Wahlpflichtmoduls
 Programmierung mit dem .NET Framework besucht und hat die selbstständige
 Formulierung und Lösung eines Projekts mit ASP.NET zum Ziel hat.
\end_layout

\begin_layout Section
Auftrag
\end_layout

\begin_layout Standard
Im Rahmen des Seminar soll selbstständig ein Projekt zu einem ausgewählten
 Thema erarbeitet werden.
 Diese Seminararbeit hatte ursprünglich zum Ziel den SBB Fahrplan mittels
 des Open Data Protocols zur Verfügung zu stellen.
 Auf Grund der limitierenden SBB.ch Fahrplan-Webseite wurde die Aufgabenstellung
 so abgeändert, das anstelle eines OData Services ein Web Service zur Verfügung
 gestellt wird.
\end_layout

\begin_layout Chapter
Hauptteil
\end_layout

\begin_layout Standard
Diese Kapitel beschreibt die Umsetzung der Seminararbeit nach dem Wasserfallmode
ll.
 Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Kuhrmann2012"

\end_inset

 ist das Wasserfallmodell insbesondere für einfach Projekte mit klar definierten
 Anforderungen einsetzbar.
 Da der Umfang dieser Seminararbeit überschaubar ist und der bearbeitende
 Student der einzige Stakeholder ist, hat es sich als ideales Vorgehensmodell
 für die Bearbeitung von Seminararbeiten herausgestellt.
 Die einzelnen Unterkapitel des Hauptteils folgen auch Modell (siehe auch
 
\begin_inset CommandInset citation
LatexCommand cite
key "Hung2007"

\end_inset

).
\end_layout

\begin_layout Section
Anforderungen
\end_layout

\begin_layout Standard
Der erste Schritt des Wasserfallmodells besteht darin die Anforderungen
 an das zu entwickelnde System festzuhalten.
 Aus Gründen der Einfachheit wurde dabei nur genau ein Use-Case identifiziert,
 der im Rahmen dieser Arbeit implementiert werden wird (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Use-Case-Spezifikation"

\end_inset

).
 
\end_layout

\begin_layout Standard
Um überhaupt erst Use-Cases spezifizieren zu können beschreibt das erste
 Unterkapitel den Systemkontext des geplanten Systems OpenTimeTable.
\end_layout

\begin_layout Subsection
Systemkontext
\end_layout

\begin_layout Standard
Der Systemkontext beschreibt die Sollperspektive, wie sich das System in
 die Realität integrieren wird.
 Hierdurch wird der Realitätsausschnitt identifiziert, der das System und
 damit potenziell auch dessen Anforderungen beeinflusst.
 Um die Anforderungen an das geplante System korrekt und vollständig spezifizier
en zu können, ist es notwendig, die Beziehung zwischen den einzelnen materiellen
 und immateriellen Aspekten im Systemkontext und dem geplanten System exakt
 zu definieren.
 Der für die Anforderungen des Systems relevante Ausschnitt der Realität
 wird als Systemkontext bezeichnet (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

).
\end_layout

\begin_layout Standard
Der Ursprung der Anforderungen des Systems liegt im Systemkontext des geplanten
 Systems.
 Aus diesem Grund wird der Systemkontext vor Erhebung und Dokumentierung
 der Anforderungen festgelegt.
 Der Systemkontext des Systems CRM-Applikation ist in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Systemkontext"

\end_inset

 als Modell dargestellt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Systemkontext.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Systemkontext
\begin_inset CommandInset label
LatexCommand label
name "fig:Systemkontext"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Use-Case-Spezifikation
\begin_inset CommandInset label
LatexCommand label
name "sub:Use-Case-Spezifikation"

\end_inset


\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 zeigen Use-Case-Diagamme die aus einer externen Nutzungssicht wesentlichen
 Funktionalitäten des betrachteten Systems sowie spezifische Beziehungen
 der einzelnen Funktionalitäten untereinander beziehungsweise zu Aspekten
 in der Umgebung des Systems.
 Abgesehen vom Namen des Use-Cases und dessen Beziehungen dokumentieren
 Use-Case-Diagramme keinerlei weitere Informationen über die einzelnen Use-Cases
, wie z.B.
 die Systematik der Interaktion eines Use-Case mit Akteuren in der Umgebung.
 Diese Informationen werden unter Verwendung einer geeigneten Schablone
 zusätzlich zum Use-Case-Diagramm textuell als Use-Case-Spezifikation festgehalt
en.
\end_layout

\begin_layout Standard
Alle funktionalen Anforderungen werden als Use-Cases modelliert und spezifiziert
\begin_inset Foot
status open

\begin_layout Plain Layout
Die verwendete Schablone stammt aus 
\begin_inset CommandInset citation
LatexCommand cite
key "Pohl2011"

\end_inset

 und dient zur zweckmässigen Strukturierung von Typen von Informationen,
 die einen Use-Case betreffen.
 Die vorgeschlagenen Abschnitte der Schablone Autor, Quelle, Verantwortlicher
 und Qualität werden ausgelassen, da sie im Rahmen dieses Projekts keinen
 zusätzlichen Nutzen bringen.
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Fahrplan abfragen
\begin_inset CommandInset label
LatexCommand label
name "sub:Fahrplan-abfragen"

\end_inset


\end_layout

\begin_layout Standard
Der Benutzer möchte den Fahrplan zwischen Ausgangs- und Zielpunkt zu einem
 bestimmten Zeitpunkt abfragen.
 Das System erstellt aus den eingegebenen Daten und den Fahrplaninformationen
 eine personalisierte Rückmeldung und präsentiert diese dem Benutzer.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename FahrplanAbfragen.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case Fahrplan abfragen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="14" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="10cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Abschnitt
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Inhalt
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Bezeichner
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
UC1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Fahrplan abfragen
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Priorität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Wichtigkeit für Systemerfolg: hoch
\begin_inset Newline newline
\end_inset

Technologisches Risiko: hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Kritikalität
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hoch
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Beschreibung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer fragt den Fahrplan ab.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer oder Administrator möchte Informationen zum Fahrplan haben.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Akteure
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Benutzer, Administrator
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Vorbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Keine.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nachbedingung
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Benutzer kann eine erneute Fahrplanabfrage starten.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ergebnis
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Der Fahrplan wird den Eingaben des Benutzers entsprechend dargestellt.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hauptszenario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1.
 Der Benutzer gibt den Ausgangspunkt an.
\end_layout

\begin_layout Plain Layout
2.
 Der Benutzer gibt das Ziel an.
\end_layout

\begin_layout Plain Layout
3.
 Der Benutzer gibt die gewünschte Abfahrtszeit ein.
\end_layout

\begin_layout Plain Layout
4.
 Das System erstellt die Fahrplaninformationen basierend auf den Eingaben
 des Benutzers und unter Einbezug des SBB Fahrplans.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Alternativszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1a.
 Der Ausgangspunkt ist unbekannt.
\end_layout

\begin_layout Plain Layout
1a1.
 Dem Benutzer wird eine Auswahlliste von passenden Ausgangspunkten angezeigt.
 Er wird aufgefordert einen der Ausgangspunkte auszuwählen oder erneut einen
 Ausgangspunkt einzugeben.
\end_layout

\begin_layout Plain Layout
2a.
 Das Ziel ist unbekannt.
\end_layout

\begin_layout Plain Layout
2a1.
 Dem Benutzer wird eine Auswahlliste von passenden Zielen angezeigt.
 Er wird aufgefordert eines der Ziele auszuwählen oder erneut ein Ziel einzugebe
n.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Ausnahmeszenarien
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Auslösendes Ereignis: Der Benutzer kann keine Verbindung zum System herstellen.
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Use-Case-Spezifikation Fahrplan abfragen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Konzept und Architektur
\end_layout

\begin_layout Standard
Die Konzeptphase
\begin_inset Foot
status open

\begin_layout Plain Layout
auch Designphase genannt
\end_layout

\end_inset

 des Wasserfallmodells behandelt die Entwicklung eines vollständigen und
 umfassenden Lösungskonzepts auf Basis der dokumentierten Anforderungen.
 Zuerst wird das System aus der Bausteinperspektive betrachtet, es wird
 von der Komponentenebene bis zur Klassenebene das System modelliert und
 die Systemarchitektur festgelegt.
 Als weitere Sicht wird die Laufzeitsicht und die Verteilungssicht des Systems
 beleuchtet und spezifziert.
\end_layout

\begin_layout Subsection
Bausteinsicht
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 und 
\begin_inset CommandInset citation
LatexCommand cite
key "Hruschka2013"

\end_inset

 lassen sich unter dem Begriff 
\begin_inset Quotes eld
\end_inset

Bausteine
\begin_inset Quotes erd
\end_inset

 sämtliche Software- oder Implementierungskomponenten zusammenfassen, die
 letztendlich Abstraktionen von Quellcode darstellen.
 Dazu gehören Klassen, Prozeduren, Programme, Pakete, Komponenten (nach
 der UML-Definition) oder Subsysteme.
\end_layout

\begin_layout Standard
Die Bausteinsicht bildet die Aufgaben des System auf Software-Bausteine
 oder -Komponenten ab.
 Diese Sicht macht Struktur und Zusammenhänge zwischen den Bausteinen der
 Architektur explizit.
 Bausteinsichten zeigen die statischen Aspekte des Systemes und entsprechen
 in dieser Hinsicht den konventionellen Implementierungsmodellen.
\end_layout

\begin_layout Subsubsection
Komponentendiagramm
\end_layout

\begin_layout Standard
Das Komponentendigramm in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Komponentendiagramm"

\end_inset

 stellt das System OpenTimeTable aus der Vogelperspektive dar und ist die
 höchstabstrahierte Ansicht der Bausteinsicht, die in diesem Projekt verfügbar
 ist.
 
\end_layout

\begin_layout Standard
Die Fahrplan-Webseite SBB.ch stellt einen XML Fahrplan zur Verfügung welcher
 von der Serverapplikation genutzt wird um Fahrplandaten aufzubereiten und
 danach der Clientapplikation weiterzugeben.
\end_layout

\begin_layout Standard
Der OpenTimeTable.Service bezeichnet die Serverapplikation des Systems und
 implementiert die beiden Schnittstellen
\begin_inset Foot
status open

\begin_layout Plain Layout
Im Zusammenhang mit WCF auch Service Contracts genannt.
\end_layout

\end_inset

 IConnectionService und ILocationService (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Service-Contracts"

\end_inset

).
 Er stellt die Schnittstellen als Webservices den Clientapplikationen zur
 Verfügung.
 
\end_layout

\begin_layout Standard
Die Clientapplikationen OpenTimeTable.Client die als Modul innerhalb von
 Orchard realisiert wird, greift auf die Serverapplikation über die beiden
 Schnittstellen zu und stellt die zurückgegeben Daten dem Benutzer dar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ComponentModel.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Komponentendiagramm
\begin_inset CommandInset label
LatexCommand label
name "fig:Komponentendiagramm"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Domänenmodell
\end_layout

\begin_layout Standard
Das Domänenmodell (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-Domänenmodell"

\end_inset

) umfasst nur die Klassen der Objekte, die über die Serviceschnittstelle
 von der Client- an die Serverapplikation beziehungsweise umgekehrt übertragen
 werden.
 
\end_layout

\begin_layout Standard
OpenTimeTable verwendet ein vergleichsweise simples und selbsterklärendes
 Domänenmodell wenn man schon einemal ein Fahrplananzeigesystem wie SBB.ch
 oder ähnliche genutzt hat.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename Contracts.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm Domänenmodell
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassendiagramm-Domänenmodell"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Service Contracts
\begin_inset CommandInset label
LatexCommand label
name "sub:Service-Contracts"

\end_inset


\end_layout

\begin_layout Standard
Ein Service Contract spezifiziert eine Schnittstelle zur Kommunikation verschied
ener Applikationen innerhalb eines verteilten Systems.
 Häufig werden diese Service Contracts als Webservices angeboten, da sie
 dadurch plattform- und frameworkunabhängig genutzt werden können.
 
\end_layout

\begin_layout Standard
Typischerweise umfasst ein Service Contract mehrere Operationen, deren Rückgabew
erte als XML-Fragmente an die konsumierende Applikation zurückgegeben werden.
 Ausserdem ist ein Service Contract per Definition grundsätzlich zustandslos,
 er behandelt mehrere Anfragen (auch desselben Auftraggebers) immer als
 unabhängige Transaktionen.
 Anfragen werden ohne Bezug zu früheren, vorhergegeganen Anfragen behandelt
 und es werden auch keine Sitzungsinformationen ausgetauscht.
\end_layout

\begin_layout Paragraph
ILocationService
\end_layout

\begin_layout Standard
Die in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-ILocationService"

\end_inset

 gezeigte Schnittstelle ILocationService stellt Funktionalitäten zur Verfügung
 über welche Haltestellen und Bahnhöfe abgefragt werden können.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename LocationService.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm ILocationService
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassendiagramm-ILocationService"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
IConnectionService
\end_layout

\begin_layout Standard
Der IConnectionService in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Klassendiagramm-IConnectionServi"

\end_inset

 gibt Verbindungen zurück, welche über verschiedene Parameter gesucht werden
 können.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename ConnectionService.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Klassendiagramm IConnectionService
\begin_inset CommandInset label
LatexCommand label
name "fig:Klassendiagramm-IConnectionServi"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Laufzeitsicht
\end_layout

\begin_layout Standard
Die Laufzeitsicht beschreibt, welche Bestandteile des Systems zur Laufzeit
 existieren und wie diese zusammenwirken (nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

).
 Dabei kommen wichtige Aspekte des Systembetriebs ins Spiel, die beispielsweise
 den Systemstart, die Laufzeitkonfiguration oder die Administration des
 Systems betreffen.
\end_layout

\begin_layout Standard
Darüber hinaus dokumentiert die Laufzeitsicht, wie Laufzeitkomponenten sich
 aus Instanzen von Implementierungsbausteinen zusammensetzen.
 
\end_layout

\begin_layout Subsubsection
Fahrplan abfragen
\end_layout

\begin_layout Standard
Das Sequenzdiagramm in Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Sequenzdiagramm-Fahrplan-abfrage"

\end_inset

 entspricht dem Use-Case Fahrplan abfragen (siehe Kapitel 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Fahrplan-abfragen"

\end_inset

).
 
\end_layout

\begin_layout Standard
Der Benutzer greift auf dei Connection Request View über das MVC-Pattern
 von Orchard zu und gibt die gewünschten Verbindungsdaten für den Fahrplan
 ein.
 Danach greift der TimeTableController des Clients auf den Server zu und
 generiert anhand der vom Benutzer übermittelten Daten auf dem Web Service
 von SBB.ch zu, formatiert die zurückgelieferten Daten um und präsentiert
 diese in der Time Table Result View dem Benutzer.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename GetConnectionsSequenceDiagram.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Sequenzdiagramm Fahrplan abfragen
\begin_inset CommandInset label
LatexCommand label
name "fig:Sequenzdiagramm-Fahrplan-abfrage"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Verteilungssicht
\end_layout

\begin_layout Standard
Nach 
\begin_inset CommandInset citation
LatexCommand cite
key "Starke2011"

\end_inset

 beschreibt die Verteilungssicht die Ablaufumgebung des Systems in Form
 von Hardwarekomponenten (wie Prozessoren, Speicher, Netzwerk, Router und
 Firewalls) sowie den beteiligten Protokollen.
 In der Infrastruktursicht können die Leistungsdaten und Parameter der beteiligt
en Elemente dargestellt werden.
 Ausserdem werden zusätzlich Betriebssysteme oder externe Systeme aufgenommen.
\end_layout

\begin_layout Standard
Die Verteilungssicht ist von grosser Beduetung für die Betreiber des Systems,
 die Hardwarearchitekten, das Entwicklungsteam sowie Management und Projektleitu
ng (gemäss 
\begin_inset CommandInset citation
LatexCommand cite
key "Hruschka2012"

\end_inset

).
\end_layout

\begin_layout Subsubsection
Verteilungsdiagramm
\end_layout

\begin_layout Standard
Die Verteilungssicht dieser Projektdokumentation enthält nur ein sehr rudimentär
 ausgearbeitetes Verteilungsdiagramm (siehe Abbildung 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Verteilungsdiagramm"

\end_inset

).
 Dies, da kein konkretes Verteilungsszenario der Applikation innerhalb des
 Projekts geplant wurde.
 Das Projekt beeinhaltet die Erarbeitung des Konzepts sowie die konkrete
 Implementierung der Applikation ohne jedoch auf die Verteilung des Systems
 einzugehen.
 
\end_layout

\begin_layout Standard
Zu beachten ist, dass der OpenTimeTable.Service und der OpenTimeTable.Client
 beide imselben IIS und auf dem selben Server laufen könnten, dies jedoch
 auch unterschiedliche Rechner sein könnten.
 Der OpenTimeTable.Client wird als Modul von Orchard implementiert und wird
 deswegen immer innerhalb einer Orchard-Instanz angeboten.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename DeploymentModel.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption

\begin_layout Plain Layout
Verteilungsdiagramm
\begin_inset CommandInset label
LatexCommand label
name "fig:Verteilungsdiagramm"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
Implementierung
\end_layout

\begin_layout Section
Verifikation
\end_layout

\begin_layout Chapter
Schlussteil
\end_layout

\begin_layout Section
Fazit
\end_layout

\begin_layout Subsection
Abweichungen von der Aufgabenstellung
\end_layout

\begin_layout Standard
TDD
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "Seminarbericht"
options "plain"

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Anhang
\end_layout

\end_body
\end_document
